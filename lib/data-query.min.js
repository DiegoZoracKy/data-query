/*global angular*/
/**
 * Query / Filter a set of Object Literal (‘JSON’), that could be an Array or Object Literal.
 *
 * @author Diego ZoracKy, @diegozoracky | https://github.com/DiegoZoracKy/data-query
 *
 * @param   {Array | Object Literal}    dataSrc - Dataset do be filtered / queried
 * @param   {String | Object Literal | Function}   filter - Properties path to be checked
 * @param   {String | Object Literal | RegEx}   filterValue - Value to be checked against the properties path
 * @return  {Array | Object Literal}    Dataset Filtered
 */
var dataQuery=function(){"use strict";function a(a,b){var c=[];for(var d in a)c.push(a[d]),b&&(c[c.length-1]._rootKey=d);return c}function b(b,c,e){if(b&&c){if(b.constructor==Array)return b.filter(function(a){return c.constructor==Function?c(a):d(a,c,e)});if(b.constructor==Object){var f={};b=a(b,!0),b=b.filter(function(a){return c.constructor==Function?c(a):d(a,c,e)});for(var g in b)f[b[g]._rootKey]=b[g],delete f[b[g]._rootKey]._rootKey;return f}}}function c(a,b){if(void 0===a||void 0===b)return!1;if(null!==b&&b.constructor===Function)return b(a);if(null===a||null===b)return a===b;if(a.constructor===Date&&b.constructor===Date)return a===b||a.getTime()===b.getTime();if(a.constructor===Array&&b.constructor===Array){if(a===b)return!0;if(a.length!==b.length)return!1;var c=a.slice().sort(),e=b.slice().sort();return c.every(function(a,b){return e[b].constructor==RegExp?!!a.toString().match(e[b]):e[b]==a})}return a.constructor==Array?a.some(function(a){return a.constructor===Object&&b.constructor===Object?d(a,b):b.constructor==RegExp?!!a.toString().match(b):b==a}):b.constructor===Object&&a.constructor===Object?a===b||d(a,b):b.constructor===RegExp?!!a.toString().match(b):a===b}function d(a,b,f){var g=!0;if(b.constructor==String)return void 0!==f?c(e(a,b),f):void 0!==e(a,b);if(b.constructor==Object)for(var h in b)h.match(/\./)?g&=c(e(a,h),b[h]):a[h]&&a[h].constructor==Object&&b[h].constructor==Object?g&=d(a[h],b[h]):g&=c(a[h],b[h]);return g}function e(a,b){return b?(b.split(".").forEach(function(b){if(a){var c=b.match(/^\/(.*)\/$/);c&&(b=new RegExp(c[1],"gi")),b.constructor==RegExp?Object.keys(a).forEach(function(c){c.match(b)&&(a=a[c])}):a=a[b]}}),a):a}return function(c,d,e){c.constructor===String&&(c=JSON.parse(c));try{if(d.constructor===String){d=JSON.parse(d)}}catch(a){}var g=b(c,d,e);return"undefined"!=typeof process&&process.env.NODE_CLI&&console.log(JSON.stringify(g)),g}}();"undefined"!=typeof module&&module.exports&&(module.exports=dataQuery),"undefined"!=typeof angular&&angular.module("zk.dataQuery",[]).factory("dataQuery",function(){return dataQuery}).filter("dataQuery",["dataQuery",function(a){return function(b,c,d){return a(b,c,d)}}]);